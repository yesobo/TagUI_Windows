https://medium.com/tebelorg
// automation flow files start with an URL to tell TagUI where to go

// this set of flows uses datatables to retrieve/act on info from GitHub
// 6A - get URLs of Starrers, 6B - get contact info, 6C - email Starrers
// for issues or questions, kindly feedback on GitHub or support@tebel.org
// see cheatsheet for steps, conditions, finding element identifiers, etc
// https://github.com/tebelorg/TagUI#cheat-sheet

// CONTEXT - When TagUI beta was released, someone shared to Hacker News
// and GitHub stars for this project jumped from 2 to 1.5k in about 1 week.
// I wanted to send an one-time thank you email to all TagUI supporters,
// so I created these automation flows to let my laptop do the job quickly.
// I have since stopped using this as it might be borderline spam for some.
// Check Gitter chat instead for updates - https://gitter.im/tebelorg/TagUI

// datatables extend the power of repositories files to manage batch automation
// datatable has 2 or more columns, for example below (headers up to you to name)
// data-centric approach with rows representing data fields (usually row = test case)
// TagUI loops through each column to automate using values from different datasets
// for example, echo "GitHub ID - `GITHUB_ID`" in your flow shows GitHub ID - ironman

// contents of 6C_datatables.csv 
// file in this format can be from flow 6B using JavaScript, or using Excel transpose function
// TLE may also be useful to do this programmatically (another open-source project from TA)
// 6C_SENDMAIL,#1,#2,#3
// GITHUB_ID,ironman,batman,superman
// USER_EMAIL,tony@stark.org,bruce@wayne.org,clarke@kent.org

// now here's the actual flow, it uses part of the information from 6B to email using API

// JavaScript can be used as needed to create more complex automation flows

// set respective User IDs and User Emails and display to screen and log file
var github_id = "`GITHUB_ID`"
var user_email = "`USER_EMAIL`"
echo github_id " - " user_email

// only display the api call to screen, obviously we are not going to actually email the superheroes
this.echo('api your_website_url/mailer.php?APIKEY=unique_key&SUBJECT=Hi @'+github_id+'&SENDTO='+user_email+'&SENDFROM=Your Name <your_email@gmail.com>&MESSAGE=Your message line 1.<br><br>Your message line 2.');

// how api step is used to send email with 1 line, in this case using Tmail (another open-source project from TA)
// api your_website_url/mailer.php?APIKEY=unique_key&SUBJECT=Hi @'+github_id+'&SENDTO='+user_email+'&SENDFROM=Your Name <your_email@gmail.com>&MESSAGE=Your message line 1.<br><br>Your message line 2.

// response and result from the api call will be printed to screen and log, below is sample response from Tmail
// OK - Hi @ironman mail sent successfully to tony@stark.org

// wait a few seconds to reduce risk of network police flagging your mail server as bad actors and blocking you
wait 3 seconds
